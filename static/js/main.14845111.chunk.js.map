{"version":3,"sources":["components/user.js","components/todo-list-item.js","components/todo-list.js","services/api/api-service.js","components/app.js","index.js"],"names":["User","_ref","name","user","react_default","a","createElement","TodoListItem","props","_props$todo","todo","title","completed","type","checked","readOnly","components_user","TodoList","todos","className","scope","map","todo_list_item","key","id","TodoService","_baseUrl","_getData","url","fetch","concat","_this","then","res","json","getUsers","getTodos","App","state","users","todoList","apiService","ApiService","getTodosWithUsers","lengnt","Object","objectSpread","find","userId","_this2","this","Promise","all","_ref2","slicedToArray","setState","todo_list","Component","ReactDOM","render","app","document","getElementById"],"mappings":"8OAMeA,EAJF,SAAAC,GAAwB,IAAbC,EAAaD,EAArBE,KAAQD,KACtB,OAAOE,EAAAC,EAAAC,cAAA,SAAIJ,ICkBEK,EAlBM,SAAAC,GAAS,IAAAC,EAGxBD,EADFE,KAAQC,EAFkBF,EAElBE,MAAOC,EAFWH,EAEXG,UAAWT,EAFAM,EAEAN,KAG5B,OACEC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOO,KAAK,WAAWC,QAASF,EAAWG,UAAQ,KAErDX,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACU,EAAD,CAAMb,KAAMA,OCOLc,EAnBE,SAAAhB,GAAe,IAAZiB,EAAYjB,EAAZiB,MAClB,OACEd,EAAAC,EAAAC,cAAA,SAAOa,UAAU,SACff,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIc,MAAM,OAAV,aACAhB,EAAAC,EAAAC,cAAA,MAAIc,MAAM,OAAV,SACAhB,EAAAC,EAAAC,cAAA,MAAIc,MAAM,OAAV,UAGJhB,EAAAC,EAAAC,cAAA,aACGY,EAAMG,IAAI,SAAAX,GAAI,OACbN,EAAAC,EAAAC,cAACgB,EAAD,CAAcZ,KAAMA,EAAMa,IAAKb,EAAKc,UCfzBC,mDACnBC,SAAW,6CAEXC,SAAW,SAAAC,GACT,OAAOC,MAAK,GAAAC,OAAIC,EAAKL,SAAT,KAAAI,OAAqBF,IAAOI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,eAG1DC,SAAW,kBAAMJ,EAAKJ,SAAS,eAE/BS,SAAW,kBAAML,EAAKJ,SAAS,WCuClBU,oNAzCbC,MAAQ,CACNpB,MAAO,GACPqB,MAAO,GACPC,SAAU,MAGZC,WAAa,IAAIC,IAEjBC,kBAAoB,SAACzB,EAAOqB,GAC1B,OAAqB,IAAjBrB,EAAM0B,QAAiC,IAAjBL,EAAMK,OACvB,GAEF1B,EAAMG,IAAI,SAAAX,GACf,OAAOmC,OAAAC,EAAA,EAAAD,CAAA,GACFnC,EADL,CAEEP,KAAMoC,EAAMQ,KAAK,SAAA5C,GAAI,OAAIA,EAAKqB,KAAOd,EAAKsC,iGAK5B,IAAAC,EAAAC,KAClBC,QAAQC,IAAI,CAACF,KAAKT,WAAWL,WAAYc,KAAKT,WAAWN,aAAaH,KAAK,SAAA/B,GAAoB,IAAAoD,EAAAR,OAAAS,EAAA,EAAAT,CAAA5C,EAAA,GAAlBiB,EAAkBmC,EAAA,GAAXd,EAAWc,EAAA,GAC7FJ,EAAKM,SAAS,CACZrC,QACAqB,QACAC,SAAUS,EAAKN,kBAAkBzB,EAAOqB,wCAKrC,IACCC,EAAaU,KAAKZ,MAAlBE,SACR,OACEpC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,eAAd,yBACAf,EAAAC,EAAAC,cAACkD,EAAD,CAAUtC,MAAOsB,YApCPiB,cCFlBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.14845111.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst User = ({ user: { name } }) => {\r\n  return <b>{name}</b>;\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport User from './user';\r\n\r\nconst TodoListItem = props => {\r\n  const {\r\n    todo: { title, completed, user },\r\n  } = props;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input type=\"checkbox\" checked={completed} readOnly />\r\n      </td>\r\n      <td>{title}</td>\r\n      <td>\r\n        <User user={user} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport TodoListItem from './todo-list-item';\r\n\r\nconst TodoList = ({ todos }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Completed</th>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">User</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {todos.map(todo => (\r\n          <TodoListItem todo={todo} key={todo.id} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","export default class TodoService {\r\n  _baseUrl = ' https://jsonplaceholder.typicode.com';\r\n\r\n  _getData = url => {\r\n    return fetch(`${this._baseUrl}/${url}`).then(res => res.json());\r\n  };\r\n\r\n  getUsers = () => this._getData('users');\r\n\r\n  getTodos = () => this._getData('todos');\r\n}\r\n","import React, { Component } from 'react';\nimport TodoList from './todo-list';\nimport ApiService from '../services/api/api-service';\n\nimport '../App.css';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    users: [],\n    todoList: [],\n  };\n\n  apiService = new ApiService();\n\n  getTodosWithUsers = (todos, users) => {\n    if (todos.lengnt === 0 || users.lengnt === 0) {\n      return [];\n    }\n    return todos.map(todo => {\n      return {\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      };\n    });\n  };\n\n  componentDidMount() {\n    Promise.all([this.apiService.getTodos(), this.apiService.getUsers()]).then(([todos, users]) => {\n      this.setState({\n        todos,\n        users,\n        todoList: this.getTodosWithUsers(todos, users),\n      });\n    });\n  }\n\n  render() {\n    const { todoList } = this.state;\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Dynamic list of todos</h1>\n        <TodoList todos={todoList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}