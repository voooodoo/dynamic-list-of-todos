{"version":3,"sources":["components/user.js","components/todo-list-item.js","helpers/filter-constants.js","components/todo-list.js","services/api/api-service.js","components/app.js","index.js"],"names":["User","_ref","name","user","react_default","a","createElement","TodoListItem","props","_props$todo","todo","title","completed","type","checked","readOnly","components_user","SORT_ORDER_TITLE","TodoList","todos","onSort","className","scope","onClick","map","todo_list_item","key","id","TodoService","_baseUrl","_getData","url","fetch","concat","_this","then","res","json","getUsers","getTodos","App","state","users","sortField","apiService","ApiService","handleSort","setState","Object","objectSpread","find","userId","_callbackMap","callback","defineProperty","b","localeCompare","sort","_this2","this","Promise","all","_ref2","slicedToArray","_this$state","todoList","getTodosWithUsers","sortedTodo","sortTodos","todo_list","Component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.bb9ffe4d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst User = ({ user: { name } }) => {\r\n  return <b>{name}</b>;\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport User from './user';\r\n\r\nconst TodoListItem = props => {\r\n  const {\r\n    todo: { title, completed, user },\r\n  } = props;\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input type=\"checkbox\" checked={completed} readOnly />\r\n      </td>\r\n      <td>{title}</td>\r\n      <td>\r\n        <User user={user} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","export const SORT_ORDER_COMPLETED = 'completed';\r\nexport const SORT_ORDER_TITLE = 'title';\r\nexport const SORT_ORDER_USER = 'user';\r\n","import React from 'react';\r\nimport TodoListItem from './todo-list-item';\r\nimport { SORT_ORDER_COMPLETED, SORT_ORDER_TITLE, SORT_ORDER_USER } from '../helpers/filter-constants';\r\n\r\nconst TodoList = ({ todos, onSort }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\" onClick={() => onSort(SORT_ORDER_COMPLETED)}>\r\n            Completed\r\n          </th>\r\n          <th scope=\"col\" onClick={() => onSort(SORT_ORDER_TITLE)}>\r\n            Title\r\n          </th>\r\n          <th scope=\"col\" onClick={() => onSort(SORT_ORDER_USER)}>\r\n            User\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {todos.map(todo => (\r\n          <TodoListItem todo={todo} key={todo.id} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","export default class TodoService {\r\n  _baseUrl = ' https://jsonplaceholder.typicode.com';\r\n\r\n  _getData = url => {\r\n    return fetch(`${this._baseUrl}/${url}`).then(res => res.json());\r\n  };\r\n\r\n  getUsers = () => this._getData('users');\r\n\r\n  getTodos = () => this._getData('todos');\r\n}\r\n","import React, { Component } from 'react';\nimport TodoList from './todo-list';\nimport ApiService from '../services/api/api-service';\nimport { SORT_ORDER_COMPLETED, SORT_ORDER_TITLE, SORT_ORDER_USER } from '../helpers/filter-constants';\n\nimport '../App.css';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    users: [],\n    sortField: SORT_ORDER_TITLE,\n  };\n\n  apiService = new ApiService();\n\n  getTodosWithUsers(todos, users) {\n    return todos.map(todo => {\n      return {\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      };\n    });\n  }\n\n  sortTodos(todos, sortField) {\n    const callbackMap = {\n      [SORT_ORDER_TITLE]: (a, b) => a.title.localeCompare(b.title),\n      [SORT_ORDER_USER]: (a, b) => a.user.name.localeCompare(b.user.name),\n      [SORT_ORDER_COMPLETED]: (a, b) => a.completed - b.completed,\n    };\n\n    const callback = callbackMap[sortField];\n\n    return todos.sort(callback);\n  }\n\n  handleSort = sortField => {\n    this.setState({ sortField });\n  };\n\n  componentDidMount() {\n    Promise.all([this.apiService.getTodos(), this.apiService.getUsers()]).then(([todos, users]) => {\n      this.setState({\n        todos,\n        users,\n      });\n    });\n  }\n\n  render() {\n    const { todos, users, sortField } = this.state;\n    const todoList = this.getTodosWithUsers(todos, users);\n    const sortedTodo = this.sortTodos(todoList, sortField);\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Dynamic list of todos</h1>\n        <TodoList todos={sortedTodo} onSort={this.handleSort} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}